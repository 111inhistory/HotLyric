<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HotLyric.Win32.Controls"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime" 
                    xmlns:ui="http://schemas.modernwpf.com/2019">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/CommonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="TextFillColorPrimary">#FFFFFF</Color>
    <Color x:Key="TextFillColorDisabled">#5DFFFFFF</Color>
    <Color x:Key="CardBackgroundFillColorDefault">#0DFFFFFF</Color>
    <Color x:Key="CardStrokeColorDefault">#19000000</Color>
    <Color x:Key="CardBackgroundFillColorSecondary">#08FFFFFF</Color>
    <Color x:Key="SubtleFillColorTransparent">#00FFFFFF</Color>
    <Color x:Key="SubtleFillColorSecondary">#0FFFFFFF</Color>
    <Color x:Key="SubtleFillColorTertiary">#0AFFFFFF</Color>

    <SolidColorBrush x:Key="TextFillColorPrimaryBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="TextFillColorDisabledBrush" Color="#5DFFFFFF" />
    <SolidColorBrush x:Key="CardBackgroundFillColorDefaultBrush" Color="#0DFFFFFF" />
    <SolidColorBrush x:Key="CardStrokeColorDefaultBrush" Color="#19000000" />
    <SolidColorBrush x:Key="CardBackgroundFillColorSecondaryBrush" Color="#08FFFFFF" />
    <SolidColorBrush x:Key="SubtleFillColorTransparentBrush" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="SubtleFillColorSecondaryBrush" Color="#0FFFFFFF" />
    <SolidColorBrush x:Key="SubtleFillColorTertiaryBrush" Color="#0AFFFFFF" />

    <!-- Header -->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBackground}" Color="#0DFFFFFF"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderForeground}" Color="#FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderForegroundPointerOver}" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderForegroundPressed}" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderBrush}" Color="#19000000" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderPointerOverBrush}" Color="#19000000"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderPressedBrush}" Color="#19000000"/>
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderDisabledForeground}" Color="#5DFFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderDisabledBorderBrush}" Color="#19000000"/>
    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderThickness}">1</Thickness>

    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBackground}" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPointerOverBackground}" Color="#0FFFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPressedBackground}" Color="#0AFFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronForeground}" Color="#FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPointerOverForeground}" Color="#FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPressedForeground}" Color="#FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderBrush}" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderPointerOverBrush}" Color="#00FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderPressedBrush}" Color="#00FFFFFF" />
    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderThickness}">0</Thickness>

    <!-- Content -->
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentBackground}" Color="#08FFFFFF" />
    <SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentBorderBrush}" Color="#19000000"/>


    <!-- Shared header/content -->
    <sys:Double x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderMinHeight}">48</sys:Double>

    <!-- Header -->
    <HorizontalAlignment x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderHorizontalContentAlignment}">Stretch</HorizontalAlignment>
    <VerticalAlignment x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderVerticalContentAlignment}">Center</VerticalAlignment>
    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderPadding}">16,0,0,0</Thickness>
    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronMargin}">20,0,16,0</Thickness>
    <sys:String x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronUpGlyph}">&#xE70E;</sys:String>
    <sys:String x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronDownGlyph}">&#xE70D;</sys:String>
    <sys:Double x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronButtonSize}">32</sys:Double>
    <sys:Double x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronGlyphSize}">12</sys:Double>

    <!-- Content -->
    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentPadding}">16</Thickness>
    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentDownBorderThickness}">1,0,1,1</Thickness>
    <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentUpBorderThickness}">1,1,1,0</Thickness>


    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="-3" RadiusX="4" RadiusY="4"
                                   StrokeThickness="2"
                                   Stroke="#FFFFFF"
                                   SnapsToDevicePixels="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ExpanderHeaderDownStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderPadding}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ExpanderHeaderFocusVisual}" />
        <Setter Property="ui:ControlHelper.CornerRadius" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ToggleButtonBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderBrush}}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(ui:ControlHelper.CornerRadius)}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                                         To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderForeground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronForeground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBackground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                                         To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderForegroundPointerOver}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderPointerOverBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPointerOverForeground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderPointerOverBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPointerOverBackground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                         To="1.027" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                                         To="1.027" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderForegroundPressed}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderPressedBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPressedForeground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderPressedBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronPressedBackground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)"
                                                         To="1" Duration="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderDisabledForeground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderDisabledBorderBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevron" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderDisabledForeground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderDisabledBorderBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandCollapseChevronBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBackground}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                         To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevron"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)"
                                                         To="180.0" Duration="0:0:0.1"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleButtonBorder" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <CornerRadius>4,4,0,0</CornerRadius>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ToggleButtonGrid" MinHeight="{TemplateBinding MinHeight}"
                              MinWidth="{TemplateBinding MinWidth}"
                              MaxWidth="{TemplateBinding MaxWidth}"
                              Width="{TemplateBinding Width}"
                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="ContentPresenter" Grid.Column="0"
                                              TextElement.Foreground="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderForeground}}"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>

                            <Border x:Name="ExpandCollapseChevronBorder" Grid.Column="1" CornerRadius="4"
                                    Width="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronButtonSize}}"
                                    Height="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronButtonSize}}"
                                    Margin="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronMargin}}"
                                    BorderBrush="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderBrush}}"
                                    BorderThickness="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBorderThickness}}"
                                    Background="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronBackground}}">
                                <ui:FontIcon x:Name="ExpandCollapseChevron" 
                                             Glyph="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronDownGlyph}}"
                                             FontSize="12"
                                             Width="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronGlyphSize}}"
                                             Height="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronGlyphSize}}"
                                             Foreground="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderChevronForeground}}" 
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             RenderTransformOrigin="0.5,0.5"
                                             SnapsToDevicePixels="False">
                                    <ui:FontIcon.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="0"/>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        </TransformGroup>
                                    </ui:FontIcon.RenderTransform>
                                </ui:FontIcon>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ExpanderEx}">
        <Setter Property="Background" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentBackground}}" />
        <Setter Property="MinWidth" Value="96" />
        <Setter Property="MinHeight" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderMinHeight}}" />
        <Setter Property="BorderThickness" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentDownBorderThickness}}" />
        <Setter Property="BorderBrush" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentBorderBrush}}" />
        <Setter Property="Padding" Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentPadding}}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ui:ControlHelper.CornerRadius" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExpanderEx}">
                    <Border MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExExpansionStates">
                                <VisualState x:Name="ExCollapseUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExExpandDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <CornerRadius>0,0,4,4</CornerRadius>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="ExExpandDown" To="ExCollapseUp">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" Duration="0:0:0.2">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="ExCollapseUp" To="ExExpandDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="HeaderSite"
                                          Background="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBackground}}"
                                          BorderBrush="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderBrush}}"
                                          BorderThickness="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderBorderThickness}}"
                                          MinHeight="{TemplateBinding MinHeight}"
                                          IsEnabled="{TemplateBinding IsEnabled}"
                                          Padding="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderPadding}}"
                                          Style="{StaticResource ExpanderHeaderDownStyle}"
                                          HorizontalAlignment="Stretch"
                                          HorizontalContentAlignment="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderHorizontalContentAlignment}}"
                                          VerticalContentAlignment="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderHeaderVerticalContentAlignment}}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border x:Name="ExpanderContentClip" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="True">
                                <Border x:Name="ExpanderContent" 
                                        CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(ui:ControlHelper.CornerRadius)}"
                                        Visibility="Collapsed"
                                        Opacity="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type local:ExpanderEx},ResourceId=ExpanderContentDownBorderThickness}}"
                                        MinHeight="{TemplateBinding MinHeight}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Padding="{TemplateBinding Padding}">
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="ExpanderContentTransform" />
                                    </Border.RenderTransform>
                                    <ContentPresenter x:Name="ExpandSite"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>